/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2022-12-23
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.alipay.v3.JSON;

/**
 * SpecifiedAsset
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SpecifiedAsset {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_BANK_CARD_NO = "bank_card_no";
  @SerializedName(SERIALIZED_NAME_BANK_CARD_NO)
  private String bankCardNo;

  public static final String SERIALIZED_NAME_INST_ID = "inst_id";
  @SerializedName(SERIALIZED_NAME_INST_ID)
  private String instId;

  public static final String SERIALIZED_NAME_PAY_TOOL_TYPE = "pay_tool_type";
  @SerializedName(SERIALIZED_NAME_PAY_TOOL_TYPE)
  private String payToolType;

  public static final String SERIALIZED_NAME_SPECIFIED_REASON_CODE = "specified_reason_code";
  @SerializedName(SERIALIZED_NAME_SPECIFIED_REASON_CODE)
  private String specifiedReasonCode;

  public SpecifiedAsset() { 
  }

  public SpecifiedAsset bankCardNo(String bankCardNo) {
    
    this.bankCardNo = bankCardNo;
    return this;
  }

   /**
   * 指定银行卡号
   * @return bankCardNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "62XXXXXXXXXXXXXX", value = "指定银行卡号")

  public String getBankCardNo() {
    return bankCardNo;
  }


  public void setBankCardNo(String bankCardNo) {
    this.bankCardNo = bankCardNo;
  }


  public SpecifiedAsset instId(String instId) {
    
    this.instId = instId;
    return this;
  }

   /**
   * 机构编码
   * @return instId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CCB", value = "机构编码")

  public String getInstId() {
    return instId;
  }


  public void setInstId(String instId) {
    this.instId = instId;
  }


  public SpecifiedAsset payToolType(String payToolType) {
    
    this.payToolType = payToolType;
    return this;
  }

   /**
   * 资产类型，用以标识资产大类。BANKCARD - 银行卡
   * @return payToolType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "BANKCARD", value = "资产类型，用以标识资产大类。BANKCARD - 银行卡")

  public String getPayToolType() {
    return payToolType;
  }


  public void setPayToolType(String payToolType) {
    this.payToolType = payToolType;
  }


  public SpecifiedAsset specifiedReasonCode(String specifiedReasonCode) {
    
    this.specifiedReasonCode = specifiedReasonCode;
    return this;
  }

   /**
   * 限定支付渠道的原因类型
   * @return specifiedReasonCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "线下沟通具体传值，会根据对应参数拼接具体限定渠道的原因文案展示给用户", value = "限定支付渠道的原因类型")

  public String getSpecifiedReasonCode() {
    return specifiedReasonCode;
  }


  public void setSpecifiedReasonCode(String specifiedReasonCode) {
    this.specifiedReasonCode = specifiedReasonCode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SpecifiedAsset specifiedAsset = (SpecifiedAsset) o;
    return Objects.equals(this.bankCardNo, specifiedAsset.bankCardNo) &&
        Objects.equals(this.instId, specifiedAsset.instId) &&
        Objects.equals(this.payToolType, specifiedAsset.payToolType) &&
        Objects.equals(this.specifiedReasonCode, specifiedAsset.specifiedReasonCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bankCardNo, instId, payToolType, specifiedReasonCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SpecifiedAsset {\n");
    sb.append("    bankCardNo: ").append(toIndentedString(bankCardNo)).append("\n");
    sb.append("    instId: ").append(toIndentedString(instId)).append("\n");
    sb.append("    payToolType: ").append(toIndentedString(payToolType)).append("\n");
    sb.append("    specifiedReasonCode: ").append(toIndentedString(specifiedReasonCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bank_card_no");
    openapiFields.add("inst_id");
    openapiFields.add("pay_tool_type");
    openapiFields.add("specified_reason_code");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SpecifiedAsset
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (SpecifiedAsset.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in SpecifiedAsset is not found in the empty JSON string", SpecifiedAsset.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!SpecifiedAsset.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SpecifiedAsset` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("bank_card_no") != null && !jsonObj.get("bank_card_no").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bank_card_no` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bank_card_no").toString()));
      }
      if (jsonObj.get("inst_id") != null && !jsonObj.get("inst_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inst_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inst_id").toString()));
      }
      if (jsonObj.get("pay_tool_type") != null && !jsonObj.get("pay_tool_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pay_tool_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pay_tool_type").toString()));
      }
      if (jsonObj.get("specified_reason_code") != null && !jsonObj.get("specified_reason_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `specified_reason_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("specified_reason_code").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SpecifiedAsset.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SpecifiedAsset' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SpecifiedAsset> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SpecifiedAsset.class));

       return (TypeAdapter<T>) new TypeAdapter<SpecifiedAsset>() {
           @Override
           public void write(JsonWriter out, SpecifiedAsset value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SpecifiedAsset read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SpecifiedAsset given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SpecifiedAsset
  * @throws IOException if the JSON string is invalid with respect to SpecifiedAsset
  */
  public static SpecifiedAsset fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SpecifiedAsset.class);
  }

 /**
  * Convert an instance of SpecifiedAsset to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

