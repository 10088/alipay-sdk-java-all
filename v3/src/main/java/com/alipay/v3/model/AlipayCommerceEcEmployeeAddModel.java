/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2022-12-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.alipay.v3.JSON;

/**
 * AlipayCommerceEcEmployeeAddModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AlipayCommerceEcEmployeeAddModel {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_DEPARTMENT_IDS = "department_ids";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT_IDS)
  private List<String> departmentIds = null;

  public static final String SERIALIZED_NAME_EMPLOYEE_EMAIL = "employee_email";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_EMAIL)
  private String employeeEmail;

  public static final String SERIALIZED_NAME_EMPLOYEE_MOBILE = "employee_mobile";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_MOBILE)
  private String employeeMobile;

  public static final String SERIALIZED_NAME_EMPLOYEE_NAME = "employee_name";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_NAME)
  private String employeeName;

  public static final String SERIALIZED_NAME_EMPLOYEE_NO = "employee_no";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_NO)
  private String employeeNo;

  public static final String SERIALIZED_NAME_ENTERPRISE_ID = "enterprise_id";
  @SerializedName(SERIALIZED_NAME_ENTERPRISE_ID)
  private String enterpriseId;

  public static final String SERIALIZED_NAME_IDENTITY = "identity";
  @SerializedName(SERIALIZED_NAME_IDENTITY)
  private String identity;

  public static final String SERIALIZED_NAME_IDENTITY_OPEN_ID = "identity_open_id";
  @SerializedName(SERIALIZED_NAME_IDENTITY_OPEN_ID)
  private String identityOpenId;

  public static final String SERIALIZED_NAME_IDENTITY_TYPE = "identity_type";
  @SerializedName(SERIALIZED_NAME_IDENTITY_TYPE)
  private String identityType;

  public static final String SERIALIZED_NAME_ROLE_LIST = "role_list";
  @SerializedName(SERIALIZED_NAME_ROLE_LIST)
  private List<String> roleList = null;

  public AlipayCommerceEcEmployeeAddModel() { 
  }

  public AlipayCommerceEcEmployeeAddModel departmentIds(List<String> departmentIds) {
    
    this.departmentIds = departmentIds;
    return this;
  }

  public AlipayCommerceEcEmployeeAddModel addDepartmentIdsItem(String departmentIdsItem) {
    if (this.departmentIds == null) {
      this.departmentIds = new ArrayList<>();
    }
    this.departmentIds.add(departmentIdsItem);
    return this;
  }

   /**
   * 员工所属部门
   * @return departmentIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"1001069000162569\"]", value = "员工所属部门")

  public List<String> getDepartmentIds() {
    return departmentIds;
  }


  public void setDepartmentIds(List<String> departmentIds) {
    this.departmentIds = departmentIds;
  }


  public AlipayCommerceEcEmployeeAddModel employeeEmail(String employeeEmail) {
    
    this.employeeEmail = employeeEmail;
    return this;
  }

   /**
   * 员工邮箱
   * @return employeeEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "19929@email.com", value = "员工邮箱")

  public String getEmployeeEmail() {
    return employeeEmail;
  }


  public void setEmployeeEmail(String employeeEmail) {
    this.employeeEmail = employeeEmail;
  }


  public AlipayCommerceEcEmployeeAddModel employeeMobile(String employeeMobile) {
    
    this.employeeMobile = employeeMobile;
    return this;
  }

   /**
   * 员工手机号 1.和identity二选一
   * @return employeeMobile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "15757172245", value = "员工手机号 1.和identity二选一")

  public String getEmployeeMobile() {
    return employeeMobile;
  }


  public void setEmployeeMobile(String employeeMobile) {
    this.employeeMobile = employeeMobile;
  }


  public AlipayCommerceEcEmployeeAddModel employeeName(String employeeName) {
    
    this.employeeName = employeeName;
    return this;
  }

   /**
   * 员工姓名
   * @return employeeName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "张三", value = "员工姓名")

  public String getEmployeeName() {
    return employeeName;
  }


  public void setEmployeeName(String employeeName) {
    this.employeeName = employeeName;
  }


  public AlipayCommerceEcEmployeeAddModel employeeNo(String employeeNo) {
    
    this.employeeNo = employeeNo;
    return this;
  }

   /**
   * 员工编号
   * @return employeeNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "D28339", value = "员工编号")

  public String getEmployeeNo() {
    return employeeNo;
  }


  public void setEmployeeNo(String employeeNo) {
    this.employeeNo = employeeNo;
  }


  public AlipayCommerceEcEmployeeAddModel enterpriseId(String enterpriseId) {
    
    this.enterpriseId = enterpriseId;
    return this;
  }

   /**
   * 企业id
   * @return enterpriseId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "20887448493929", value = "企业id")

  public String getEnterpriseId() {
    return enterpriseId;
  }


  public void setEnterpriseId(String enterpriseId) {
    this.enterpriseId = enterpriseId;
  }


  public AlipayCommerceEcEmployeeAddModel identity(String identity) {
    
    this.identity = identity;
    return this;
  }

   /**
   * 身份 1.和employee_mobile二选一 2.对应身份类型进行传参，企业支付宝登录账号(支持手机号或者邮箱)或企业支付宝会员id(对应2088开头的支付宝会员id)
   * @return identity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "20889939994000", value = "身份 1.和employee_mobile二选一 2.对应身份类型进行传参，企业支付宝登录账号(支持手机号或者邮箱)或企业支付宝会员id(对应2088开头的支付宝会员id)")

  public String getIdentity() {
    return identity;
  }


  public void setIdentity(String identity) {
    this.identity = identity;
  }


  public AlipayCommerceEcEmployeeAddModel identityOpenId(String identityOpenId) {
    
    this.identityOpenId = identityOpenId;
    return this;
  }

   /**
   * 当identity_type为ALIPAY_USER_ID时，此字段传入open_id
   * @return identityOpenId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "074a1CcTG1LelxKe4xQC0zgNdId0nxi95b5lsNpazWYoCo5", value = "当identity_type为ALIPAY_USER_ID时，此字段传入open_id")

  public String getIdentityOpenId() {
    return identityOpenId;
  }


  public void setIdentityOpenId(String identityOpenId) {
    this.identityOpenId = identityOpenId;
  }


  public AlipayCommerceEcEmployeeAddModel identityType(String identityType) {
    
    this.identityType = identityType;
    return this;
  }

   /**
   * 身份类型 ALIPAY_LOGON_ID(企业支付宝登录账号) ALIPAY_USER_ID(企业支付宝会员id)
   * @return identityType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ALIPAY_USER_ID", value = "身份类型 ALIPAY_LOGON_ID(企业支付宝登录账号) ALIPAY_USER_ID(企业支付宝会员id)")

  public String getIdentityType() {
    return identityType;
  }


  public void setIdentityType(String identityType) {
    this.identityType = identityType;
  }


  public AlipayCommerceEcEmployeeAddModel roleList(List<String> roleList) {
    
    this.roleList = roleList;
    return this;
  }

  public AlipayCommerceEcEmployeeAddModel addRoleListItem(String roleListItem) {
    if (this.roleList == null) {
      this.roleList = new ArrayList<>();
    }
    this.roleList.add(roleListItem);
    return this;
  }

   /**
   * 角色列表，目前只支持填一种角色，默认为USER USER 普通员工 ADMIN 管理员 SUPER_ADMIN 超级管理员
   * @return roleList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"USER\"]", value = "角色列表，目前只支持填一种角色，默认为USER USER 普通员工 ADMIN 管理员 SUPER_ADMIN 超级管理员")

  public List<String> getRoleList() {
    return roleList;
  }


  public void setRoleList(List<String> roleList) {
    this.roleList = roleList;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlipayCommerceEcEmployeeAddModel alipayCommerceEcEmployeeAddModel = (AlipayCommerceEcEmployeeAddModel) o;
    return Objects.equals(this.departmentIds, alipayCommerceEcEmployeeAddModel.departmentIds) &&
        Objects.equals(this.employeeEmail, alipayCommerceEcEmployeeAddModel.employeeEmail) &&
        Objects.equals(this.employeeMobile, alipayCommerceEcEmployeeAddModel.employeeMobile) &&
        Objects.equals(this.employeeName, alipayCommerceEcEmployeeAddModel.employeeName) &&
        Objects.equals(this.employeeNo, alipayCommerceEcEmployeeAddModel.employeeNo) &&
        Objects.equals(this.enterpriseId, alipayCommerceEcEmployeeAddModel.enterpriseId) &&
        Objects.equals(this.identity, alipayCommerceEcEmployeeAddModel.identity) &&
        Objects.equals(this.identityOpenId, alipayCommerceEcEmployeeAddModel.identityOpenId) &&
        Objects.equals(this.identityType, alipayCommerceEcEmployeeAddModel.identityType) &&
        Objects.equals(this.roleList, alipayCommerceEcEmployeeAddModel.roleList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(departmentIds, employeeEmail, employeeMobile, employeeName, employeeNo, enterpriseId, identity, identityOpenId, identityType, roleList);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlipayCommerceEcEmployeeAddModel {\n");
    sb.append("    departmentIds: ").append(toIndentedString(departmentIds)).append("\n");
    sb.append("    employeeEmail: ").append(toIndentedString(employeeEmail)).append("\n");
    sb.append("    employeeMobile: ").append(toIndentedString(employeeMobile)).append("\n");
    sb.append("    employeeName: ").append(toIndentedString(employeeName)).append("\n");
    sb.append("    employeeNo: ").append(toIndentedString(employeeNo)).append("\n");
    sb.append("    enterpriseId: ").append(toIndentedString(enterpriseId)).append("\n");
    sb.append("    identity: ").append(toIndentedString(identity)).append("\n");
    sb.append("    identityOpenId: ").append(toIndentedString(identityOpenId)).append("\n");
    sb.append("    identityType: ").append(toIndentedString(identityType)).append("\n");
    sb.append("    roleList: ").append(toIndentedString(roleList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("department_ids");
    openapiFields.add("employee_email");
    openapiFields.add("employee_mobile");
    openapiFields.add("employee_name");
    openapiFields.add("employee_no");
    openapiFields.add("enterprise_id");
    openapiFields.add("identity");
    openapiFields.add("identity_open_id");
    openapiFields.add("identity_type");
    openapiFields.add("role_list");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AlipayCommerceEcEmployeeAddModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (AlipayCommerceEcEmployeeAddModel.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in AlipayCommerceEcEmployeeAddModel is not found in the empty JSON string", AlipayCommerceEcEmployeeAddModel.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!AlipayCommerceEcEmployeeAddModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AlipayCommerceEcEmployeeAddModel` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // ensure the json data is an array
      if (jsonObj.get("department_ids") != null && !jsonObj.get("department_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `department_ids` to be an array in the JSON string but got `%s`", jsonObj.get("department_ids").toString()));
      }
      if (jsonObj.get("employee_email") != null && !jsonObj.get("employee_email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employee_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employee_email").toString()));
      }
      if (jsonObj.get("employee_mobile") != null && !jsonObj.get("employee_mobile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employee_mobile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employee_mobile").toString()));
      }
      if (jsonObj.get("employee_name") != null && !jsonObj.get("employee_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employee_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employee_name").toString()));
      }
      if (jsonObj.get("employee_no") != null && !jsonObj.get("employee_no").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employee_no` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employee_no").toString()));
      }
      if (jsonObj.get("enterprise_id") != null && !jsonObj.get("enterprise_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `enterprise_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("enterprise_id").toString()));
      }
      if (jsonObj.get("identity") != null && !jsonObj.get("identity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `identity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("identity").toString()));
      }
      if (jsonObj.get("identity_open_id") != null && !jsonObj.get("identity_open_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `identity_open_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("identity_open_id").toString()));
      }
      if (jsonObj.get("identity_type") != null && !jsonObj.get("identity_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `identity_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("identity_type").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("role_list") != null && !jsonObj.get("role_list").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `role_list` to be an array in the JSON string but got `%s`", jsonObj.get("role_list").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AlipayCommerceEcEmployeeAddModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AlipayCommerceEcEmployeeAddModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AlipayCommerceEcEmployeeAddModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AlipayCommerceEcEmployeeAddModel.class));

       return (TypeAdapter<T>) new TypeAdapter<AlipayCommerceEcEmployeeAddModel>() {
           @Override
           public void write(JsonWriter out, AlipayCommerceEcEmployeeAddModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AlipayCommerceEcEmployeeAddModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AlipayCommerceEcEmployeeAddModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AlipayCommerceEcEmployeeAddModel
  * @throws IOException if the JSON string is invalid with respect to AlipayCommerceEcEmployeeAddModel
  */
  public static AlipayCommerceEcEmployeeAddModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AlipayCommerceEcEmployeeAddModel.class);
  }

 /**
  * Convert an instance of AlipayCommerceEcEmployeeAddModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

