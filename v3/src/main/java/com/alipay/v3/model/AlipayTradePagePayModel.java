/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2022-12-23
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.alipay.v3.model.AgreementSignParams;
import com.alipay.v3.model.ExtUserInfo;
import com.alipay.v3.model.ExtendParams;
import com.alipay.v3.model.GoodsDetail;
import com.alipay.v3.model.InvoiceInfo;
import com.alipay.v3.model.RoyaltyInfo;
import com.alipay.v3.model.SettleInfo;
import com.alipay.v3.model.SubMerchant;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.alipay.v3.JSON;

/**
 * AlipayTradePagePayModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AlipayTradePagePayModel {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_AGREEMENT_SIGN_PARAMS = "agreement_sign_params";
  @SerializedName(SERIALIZED_NAME_AGREEMENT_SIGN_PARAMS)
  private AgreementSignParams agreementSignParams;

  public static final String SERIALIZED_NAME_BODY = "body";
  @SerializedName(SERIALIZED_NAME_BODY)
  private String body;

  public static final String SERIALIZED_NAME_BUSINESS_PARAMS = "business_params";
  @SerializedName(SERIALIZED_NAME_BUSINESS_PARAMS)
  private String businessParams;

  public static final String SERIALIZED_NAME_DISABLE_PAY_CHANNELS = "disable_pay_channels";
  @SerializedName(SERIALIZED_NAME_DISABLE_PAY_CHANNELS)
  private String disablePayChannels;

  public static final String SERIALIZED_NAME_ENABLE_PAY_CHANNELS = "enable_pay_channels";
  @SerializedName(SERIALIZED_NAME_ENABLE_PAY_CHANNELS)
  private String enablePayChannels;

  public static final String SERIALIZED_NAME_EXT_USER_INFO = "ext_user_info";
  @SerializedName(SERIALIZED_NAME_EXT_USER_INFO)
  private ExtUserInfo extUserInfo;

  public static final String SERIALIZED_NAME_EXTEND_PARAMS = "extend_params";
  @SerializedName(SERIALIZED_NAME_EXTEND_PARAMS)
  private ExtendParams extendParams;

  public static final String SERIALIZED_NAME_GOODS_DETAIL = "goods_detail";
  @SerializedName(SERIALIZED_NAME_GOODS_DETAIL)
  private List<GoodsDetail> goodsDetail = null;

  public static final String SERIALIZED_NAME_GOODS_TYPE = "goods_type";
  @SerializedName(SERIALIZED_NAME_GOODS_TYPE)
  private String goodsType;

  public static final String SERIALIZED_NAME_INTEGRATION_TYPE = "integration_type";
  @SerializedName(SERIALIZED_NAME_INTEGRATION_TYPE)
  private String integrationType;

  public static final String SERIALIZED_NAME_INVOICE_INFO = "invoice_info";
  @SerializedName(SERIALIZED_NAME_INVOICE_INFO)
  private InvoiceInfo invoiceInfo;

  public static final String SERIALIZED_NAME_MERCHANT_ORDER_NO = "merchant_order_no";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ORDER_NO)
  private String merchantOrderNo;

  public static final String SERIALIZED_NAME_NOTIFY_URL = "notify_url";
  @SerializedName(SERIALIZED_NAME_NOTIFY_URL)
  private String notifyUrl;

  public static final String SERIALIZED_NAME_OUT_TRADE_NO = "out_trade_no";
  @SerializedName(SERIALIZED_NAME_OUT_TRADE_NO)
  private String outTradeNo;

  public static final String SERIALIZED_NAME_PASSBACK_PARAMS = "passback_params";
  @SerializedName(SERIALIZED_NAME_PASSBACK_PARAMS)
  private String passbackParams;

  public static final String SERIALIZED_NAME_PRODUCT_CODE = "product_code";
  @SerializedName(SERIALIZED_NAME_PRODUCT_CODE)
  private String productCode;

  public static final String SERIALIZED_NAME_PROMO_PARAMS = "promo_params";
  @SerializedName(SERIALIZED_NAME_PROMO_PARAMS)
  private String promoParams;

  public static final String SERIALIZED_NAME_QR_PAY_MODE = "qr_pay_mode";
  @SerializedName(SERIALIZED_NAME_QR_PAY_MODE)
  private String qrPayMode;

  public static final String SERIALIZED_NAME_QRCODE_WIDTH = "qrcode_width";
  @SerializedName(SERIALIZED_NAME_QRCODE_WIDTH)
  private Integer qrcodeWidth;

  public static final String SERIALIZED_NAME_QUERY_OPTIONS = "query_options";
  @SerializedName(SERIALIZED_NAME_QUERY_OPTIONS)
  private List<String> queryOptions = null;

  public static final String SERIALIZED_NAME_REQUEST_FROM_URL = "request_from_url";
  @SerializedName(SERIALIZED_NAME_REQUEST_FROM_URL)
  private String requestFromUrl;

  public static final String SERIALIZED_NAME_RETURN_URL = "return_url";
  @SerializedName(SERIALIZED_NAME_RETURN_URL)
  private String returnUrl;

  public static final String SERIALIZED_NAME_ROYALTY_INFO = "royalty_info";
  @SerializedName(SERIALIZED_NAME_ROYALTY_INFO)
  private RoyaltyInfo royaltyInfo;

  public static final String SERIALIZED_NAME_SETTLE_INFO = "settle_info";
  @SerializedName(SERIALIZED_NAME_SETTLE_INFO)
  private SettleInfo settleInfo;

  public static final String SERIALIZED_NAME_STORE_ID = "store_id";
  @SerializedName(SERIALIZED_NAME_STORE_ID)
  private String storeId;

  public static final String SERIALIZED_NAME_SUB_MERCHANT = "sub_merchant";
  @SerializedName(SERIALIZED_NAME_SUB_MERCHANT)
  private SubMerchant subMerchant;

  public static final String SERIALIZED_NAME_SUBJECT = "subject";
  @SerializedName(SERIALIZED_NAME_SUBJECT)
  private String subject;

  public static final String SERIALIZED_NAME_TIME_EXPIRE = "time_expire";
  @SerializedName(SERIALIZED_NAME_TIME_EXPIRE)
  private String timeExpire;

  public static final String SERIALIZED_NAME_TIMEOUT_EXPRESS = "timeout_express";
  @SerializedName(SERIALIZED_NAME_TIMEOUT_EXPRESS)
  private String timeoutExpress;

  public static final String SERIALIZED_NAME_TOTAL_AMOUNT = "total_amount";
  @SerializedName(SERIALIZED_NAME_TOTAL_AMOUNT)
  private String totalAmount;

  public AlipayTradePagePayModel() { 
  }

  public AlipayTradePagePayModel agreementSignParams(AgreementSignParams agreementSignParams) {
    
    this.agreementSignParams = agreementSignParams;
    return this;
  }

   /**
   * Get agreementSignParams
   * @return agreementSignParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AgreementSignParams getAgreementSignParams() {
    return agreementSignParams;
  }


  public void setAgreementSignParams(AgreementSignParams agreementSignParams) {
    this.agreementSignParams = agreementSignParams;
  }


  public AlipayTradePagePayModel body(String body) {
    
    this.body = body;
    return this;
  }

   /**
   * 订单附加信息。 如果请求时传递了该参数，将在异步通知、对账单中原样返回，同时会在商户和用户的pc账单详情中作为交易描述展示
   * @return body
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Iphone6 16G", value = "订单附加信息。 如果请求时传递了该参数，将在异步通知、对账单中原样返回，同时会在商户和用户的pc账单详情中作为交易描述展示")

  public String getBody() {
    return body;
  }


  public void setBody(String body) {
    this.body = body;
  }


  public AlipayTradePagePayModel businessParams(String businessParams) {
    
    this.businessParams = businessParams;
    return this;
  }

   /**
   * 商户传入业务信息，具体值要和支付宝约定，应用于安全，营销等参数直传场景，格式为json格式
   * @return businessParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"data\":\"123\"}", value = "商户传入业务信息，具体值要和支付宝约定，应用于安全，营销等参数直传场景，格式为json格式")

  public String getBusinessParams() {
    return businessParams;
  }


  public void setBusinessParams(String businessParams) {
    this.businessParams = businessParams;
  }


  public AlipayTradePagePayModel disablePayChannels(String disablePayChannels) {
    
    this.disablePayChannels = disablePayChannels;
    return this;
  }

   /**
   * 禁用渠道,用户不可用指定渠道支付，多个渠道以逗号分割 注，与enable_pay_channels互斥 &lt;a href&#x3D;\&quot;https://docs.open.alipay.com/common/wifww7\&quot;&gt;渠道列表&lt;/a&gt;
   * @return disablePayChannels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "pcredit,moneyFund,debitCardExpress", value = "禁用渠道,用户不可用指定渠道支付，多个渠道以逗号分割 注，与enable_pay_channels互斥 <a href=\"https://docs.open.alipay.com/common/wifww7\">渠道列表</a>")

  public String getDisablePayChannels() {
    return disablePayChannels;
  }


  public void setDisablePayChannels(String disablePayChannels) {
    this.disablePayChannels = disablePayChannels;
  }


  public AlipayTradePagePayModel enablePayChannels(String enablePayChannels) {
    
    this.enablePayChannels = enablePayChannels;
    return this;
  }

   /**
   * 指定支付渠道。 用户只能使用指定的渠道进行支付，多个渠道以逗号分割。 与disable_pay_channels互斥，支持传入的值：&lt;a target&#x3D;\&quot;_blank\&quot; href&#x3D;\&quot;https://docs.open.alipay.com/common/wifww7\&quot;&gt;渠道列表&lt;/a&gt;。 注：如果传入了指定支付渠道，则用户只能用指定内的渠道支付，包括营销渠道也要指定才能使用。该参数可能导致用户支付受限，慎用。
   * @return enablePayChannels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "pcredit,moneyFund,debitCardExpress", value = "指定支付渠道。 用户只能使用指定的渠道进行支付，多个渠道以逗号分割。 与disable_pay_channels互斥，支持传入的值：<a target=\"_blank\" href=\"https://docs.open.alipay.com/common/wifww7\">渠道列表</a>。 注：如果传入了指定支付渠道，则用户只能用指定内的渠道支付，包括营销渠道也要指定才能使用。该参数可能导致用户支付受限，慎用。")

  public String getEnablePayChannels() {
    return enablePayChannels;
  }


  public void setEnablePayChannels(String enablePayChannels) {
    this.enablePayChannels = enablePayChannels;
  }


  public AlipayTradePagePayModel extUserInfo(ExtUserInfo extUserInfo) {
    
    this.extUserInfo = extUserInfo;
    return this;
  }

   /**
   * Get extUserInfo
   * @return extUserInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ExtUserInfo getExtUserInfo() {
    return extUserInfo;
  }


  public void setExtUserInfo(ExtUserInfo extUserInfo) {
    this.extUserInfo = extUserInfo;
  }


  public AlipayTradePagePayModel extendParams(ExtendParams extendParams) {
    
    this.extendParams = extendParams;
    return this;
  }

   /**
   * Get extendParams
   * @return extendParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ExtendParams getExtendParams() {
    return extendParams;
  }


  public void setExtendParams(ExtendParams extendParams) {
    this.extendParams = extendParams;
  }


  public AlipayTradePagePayModel goodsDetail(List<GoodsDetail> goodsDetail) {
    
    this.goodsDetail = goodsDetail;
    return this;
  }

  public AlipayTradePagePayModel addGoodsDetailItem(GoodsDetail goodsDetailItem) {
    if (this.goodsDetail == null) {
      this.goodsDetail = new ArrayList<>();
    }
    this.goodsDetail.add(goodsDetailItem);
    return this;
  }

   /**
   * 订单包含的商品列表信息，json格式。
   * @return goodsDetail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "订单包含的商品列表信息，json格式。")

  public List<GoodsDetail> getGoodsDetail() {
    return goodsDetail;
  }


  public void setGoodsDetail(List<GoodsDetail> goodsDetail) {
    this.goodsDetail = goodsDetail;
  }


  public AlipayTradePagePayModel goodsType(String goodsType) {
    
    this.goodsType = goodsType;
    return this;
  }

   /**
   * 商品主类型 ，枚举支持： 0：虚拟类商品； 1：实物类商品。 注：虚拟类商品不支持使用花呗渠道
   * @return goodsType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "商品主类型 ，枚举支持： 0：虚拟类商品； 1：实物类商品。 注：虚拟类商品不支持使用花呗渠道")

  public String getGoodsType() {
    return goodsType;
  }


  public void setGoodsType(String goodsType) {
    this.goodsType = goodsType;
  }


  public AlipayTradePagePayModel integrationType(String integrationType) {
    
    this.integrationType = integrationType;
    return this;
  }

   /**
   * 请求后页面的集成方式。 枚举值： ALIAPP：支付宝钱包内 PCWEB：PC端访问 默认值为PCWEB。
   * @return integrationType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "PCWEB", value = "请求后页面的集成方式。 枚举值： ALIAPP：支付宝钱包内 PCWEB：PC端访问 默认值为PCWEB。")

  public String getIntegrationType() {
    return integrationType;
  }


  public void setIntegrationType(String integrationType) {
    this.integrationType = integrationType;
  }


  public AlipayTradePagePayModel invoiceInfo(InvoiceInfo invoiceInfo) {
    
    this.invoiceInfo = invoiceInfo;
    return this;
  }

   /**
   * Get invoiceInfo
   * @return invoiceInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public InvoiceInfo getInvoiceInfo() {
    return invoiceInfo;
  }


  public void setInvoiceInfo(InvoiceInfo invoiceInfo) {
    this.invoiceInfo = invoiceInfo;
  }


  public AlipayTradePagePayModel merchantOrderNo(String merchantOrderNo) {
    
    this.merchantOrderNo = merchantOrderNo;
    return this;
  }

   /**
   * 商户的原始订单号
   * @return merchantOrderNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "20161008001", value = "商户的原始订单号")

  public String getMerchantOrderNo() {
    return merchantOrderNo;
  }


  public void setMerchantOrderNo(String merchantOrderNo) {
    this.merchantOrderNo = merchantOrderNo;
  }


  public AlipayTradePagePayModel notifyUrl(String notifyUrl) {
    
    this.notifyUrl = notifyUrl;
    return this;
  }

   /**
   * 通知地址
   * @return notifyUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "通知地址")

  public String getNotifyUrl() {
    return notifyUrl;
  }


  public void setNotifyUrl(String notifyUrl) {
    this.notifyUrl = notifyUrl;
  }


  public AlipayTradePagePayModel outTradeNo(String outTradeNo) {
    
    this.outTradeNo = outTradeNo;
    return this;
  }

   /**
   * 商户订单号。 由商家自定义，64个字符以内，仅支持字母、数字、下划线且需保证在商户端不重复。
   * @return outTradeNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "20150320010101001", value = "商户订单号。 由商家自定义，64个字符以内，仅支持字母、数字、下划线且需保证在商户端不重复。")

  public String getOutTradeNo() {
    return outTradeNo;
  }


  public void setOutTradeNo(String outTradeNo) {
    this.outTradeNo = outTradeNo;
  }


  public AlipayTradePagePayModel passbackParams(String passbackParams) {
    
    this.passbackParams = passbackParams;
    return this;
  }

   /**
   * 公用回传参数。 如果请求时传递了该参数，支付宝会在异步通知时将该参数原样返回。
   * @return passbackParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "merchantBizType%3d3C%26merchantBizNo%3d2016010101111", value = "公用回传参数。 如果请求时传递了该参数，支付宝会在异步通知时将该参数原样返回。")

  public String getPassbackParams() {
    return passbackParams;
  }


  public void setPassbackParams(String passbackParams) {
    this.passbackParams = passbackParams;
  }


  public AlipayTradePagePayModel productCode(String productCode) {
    
    this.productCode = productCode;
    return this;
  }

   /**
   * 产品码。 商家和支付宝签约的产品码。 枚举值（点击查看签约情况）： &lt;a target&#x3D;\&quot;_blank\&quot; href&#x3D;\&quot;https://opensupport.alipay.com/support/codelab/detail/766/772\&quot;&gt;FAST_INSTANT_TRADE_PAY&lt;/a&gt;：新快捷即时到账产品。 注：目前仅支持FAST_INSTANT_TRADE_PAY
   * @return productCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "FAST_INSTANT_TRADE_PAY", value = "产品码。 商家和支付宝签约的产品码。 枚举值（点击查看签约情况）： <a target=\"_blank\" href=\"https://opensupport.alipay.com/support/codelab/detail/766/772\">FAST_INSTANT_TRADE_PAY</a>：新快捷即时到账产品。 注：目前仅支持FAST_INSTANT_TRADE_PAY")

  public String getProductCode() {
    return productCode;
  }


  public void setProductCode(String productCode) {
    this.productCode = productCode;
  }


  public AlipayTradePagePayModel promoParams(String promoParams) {
    
    this.promoParams = promoParams;
    return this;
  }

   /**
   * 优惠参数  注：仅与支付宝协商后可用
   * @return promoParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"storeIdType\":\"1\"}", value = "优惠参数  注：仅与支付宝协商后可用")

  public String getPromoParams() {
    return promoParams;
  }


  public void setPromoParams(String promoParams) {
    this.promoParams = promoParams;
  }


  public AlipayTradePagePayModel qrPayMode(String qrPayMode) {
    
    this.qrPayMode = qrPayMode;
    return this;
  }

   /**
   * PC扫码支付的方式。 支持前置模式和跳转模式。 前置模式是将二维码前置到商户的订单确认页的模式。需要商户在自己的页面中以 iframe 方式请求支付宝页面。具体支持的枚举值有以下几种： 0：订单码-简约前置模式，对应 iframe 宽度不能小于600px，高度不能小于300px； 1：订单码-前置模式，对应iframe 宽度不能小于 300px，高度不能小于600px； 3：订单码-迷你前置模式，对应 iframe 宽度不能小于 75px，高度不能小于75px； 4：订单码-可定义宽度的嵌入式二维码，商户可根据需要设定二维码的大小。  跳转模式下，用户的扫码界面是由支付宝生成的，不在商户的域名下。支持传入的枚举值有： 2：订单码-跳转模式
   * @return qrPayMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "PC扫码支付的方式。 支持前置模式和跳转模式。 前置模式是将二维码前置到商户的订单确认页的模式。需要商户在自己的页面中以 iframe 方式请求支付宝页面。具体支持的枚举值有以下几种： 0：订单码-简约前置模式，对应 iframe 宽度不能小于600px，高度不能小于300px； 1：订单码-前置模式，对应iframe 宽度不能小于 300px，高度不能小于600px； 3：订单码-迷你前置模式，对应 iframe 宽度不能小于 75px，高度不能小于75px； 4：订单码-可定义宽度的嵌入式二维码，商户可根据需要设定二维码的大小。  跳转模式下，用户的扫码界面是由支付宝生成的，不在商户的域名下。支持传入的枚举值有： 2：订单码-跳转模式")

  public String getQrPayMode() {
    return qrPayMode;
  }


  public void setQrPayMode(String qrPayMode) {
    this.qrPayMode = qrPayMode;
  }


  public AlipayTradePagePayModel qrcodeWidth(Integer qrcodeWidth) {
    
    this.qrcodeWidth = qrcodeWidth;
    return this;
  }

   /**
   * 商户自定义二维码宽度。 注：qr_pay_mode&#x3D;4时该参数有效
   * @return qrcodeWidth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "100", value = "商户自定义二维码宽度。 注：qr_pay_mode=4时该参数有效")

  public Integer getQrcodeWidth() {
    return qrcodeWidth;
  }


  public void setQrcodeWidth(Integer qrcodeWidth) {
    this.qrcodeWidth = qrcodeWidth;
  }


  public AlipayTradePagePayModel queryOptions(List<String> queryOptions) {
    
    this.queryOptions = queryOptions;
    return this;
  }

  public AlipayTradePagePayModel addQueryOptionsItem(String queryOptionsItem) {
    if (this.queryOptions == null) {
      this.queryOptions = new ArrayList<>();
    }
    this.queryOptions.add(queryOptionsItem);
    return this;
  }

   /**
   * 返回参数选项。 商户通过传递该参数来定制需要额外返回的信息字段，数组格式。包括但不限于：[\&quot;hyb_amount\&quot;,\&quot;enterprise_pay_info\&quot;]
   * @return queryOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"hyb_amount\",\"enterprise_pay_info\"]", value = "返回参数选项。 商户通过传递该参数来定制需要额外返回的信息字段，数组格式。包括但不限于：[\"hyb_amount\",\"enterprise_pay_info\"]")

  public List<String> getQueryOptions() {
    return queryOptions;
  }


  public void setQueryOptions(List<String> queryOptions) {
    this.queryOptions = queryOptions;
  }


  public AlipayTradePagePayModel requestFromUrl(String requestFromUrl) {
    
    this.requestFromUrl = requestFromUrl;
    return this;
  }

   /**
   * 请求来源地址。如果使用ALIAPP的集成方式，用户中途取消支付会返回该地址。
   * @return requestFromUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://", value = "请求来源地址。如果使用ALIAPP的集成方式，用户中途取消支付会返回该地址。")

  public String getRequestFromUrl() {
    return requestFromUrl;
  }


  public void setRequestFromUrl(String requestFromUrl) {
    this.requestFromUrl = requestFromUrl;
  }


  public AlipayTradePagePayModel returnUrl(String returnUrl) {
    
    this.returnUrl = returnUrl;
    return this;
  }

   /**
   * 跳转地址
   * @return returnUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "跳转地址")

  public String getReturnUrl() {
    return returnUrl;
  }


  public void setReturnUrl(String returnUrl) {
    this.returnUrl = returnUrl;
  }


  public AlipayTradePagePayModel royaltyInfo(RoyaltyInfo royaltyInfo) {
    
    this.royaltyInfo = royaltyInfo;
    return this;
  }

   /**
   * Get royaltyInfo
   * @return royaltyInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RoyaltyInfo getRoyaltyInfo() {
    return royaltyInfo;
  }


  public void setRoyaltyInfo(RoyaltyInfo royaltyInfo) {
    this.royaltyInfo = royaltyInfo;
  }


  public AlipayTradePagePayModel settleInfo(SettleInfo settleInfo) {
    
    this.settleInfo = settleInfo;
    return this;
  }

   /**
   * Get settleInfo
   * @return settleInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SettleInfo getSettleInfo() {
    return settleInfo;
  }


  public void setSettleInfo(SettleInfo settleInfo) {
    this.settleInfo = settleInfo;
  }


  public AlipayTradePagePayModel storeId(String storeId) {
    
    this.storeId = storeId;
    return this;
  }

   /**
   * 商户门店编号。 指商户创建门店时输入的门店编号。
   * @return storeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "NJ_001", value = "商户门店编号。 指商户创建门店时输入的门店编号。")

  public String getStoreId() {
    return storeId;
  }


  public void setStoreId(String storeId) {
    this.storeId = storeId;
  }


  public AlipayTradePagePayModel subMerchant(SubMerchant subMerchant) {
    
    this.subMerchant = subMerchant;
    return this;
  }

   /**
   * Get subMerchant
   * @return subMerchant
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SubMerchant getSubMerchant() {
    return subMerchant;
  }


  public void setSubMerchant(SubMerchant subMerchant) {
    this.subMerchant = subMerchant;
  }


  public AlipayTradePagePayModel subject(String subject) {
    
    this.subject = subject;
    return this;
  }

   /**
   * 订单标题。 注意：不可使用特殊字符，如 /，&#x3D;，&amp; 等。
   * @return subject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Iphone6 16G", value = "订单标题。 注意：不可使用特殊字符，如 /，=，& 等。")

  public String getSubject() {
    return subject;
  }


  public void setSubject(String subject) {
    this.subject = subject;
  }


  public AlipayTradePagePayModel timeExpire(String timeExpire) {
    
    this.timeExpire = timeExpire;
    return this;
  }

   /**
   * 订单绝对超时时间。 格式为yyyy-MM-dd HH:mm:ss。超时时间范围：1m~15d。 注：time_expire和timeout_express两者只需传入一个或者都不传，两者均传入时，优先使用time_expire。
   * @return timeExpire
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2016-12-31 10:05:01", value = "订单绝对超时时间。 格式为yyyy-MM-dd HH:mm:ss。超时时间范围：1m~15d。 注：time_expire和timeout_express两者只需传入一个或者都不传，两者均传入时，优先使用time_expire。")

  public String getTimeExpire() {
    return timeExpire;
  }


  public void setTimeExpire(String timeExpire) {
    this.timeExpire = timeExpire;
  }


  public AlipayTradePagePayModel timeoutExpress(String timeoutExpress) {
    
    this.timeoutExpress = timeoutExpress;
    return this;
  }

   /**
   * 建议使用time_expire字段。  订单相对超时时间。从商户首次请求时间开始计算 该笔订单允许的最晚付款时间，逾期将关闭交易。取值范围：1m～15d。m-分钟，h-小时，d-天，1c-当天（1c-当天的情况下，无论交易何时创建，都在0点关闭）。 该参数数值不接受小数点， 如 1.5h，可转换为 90m。 默认值为15d。  注：time_expire和timeout_express两者只需传入一个或者都不传，如果两者都传，优先使用time_expire。
   * @return timeoutExpress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "90m", value = "建议使用time_expire字段。  订单相对超时时间。从商户首次请求时间开始计算 该笔订单允许的最晚付款时间，逾期将关闭交易。取值范围：1m～15d。m-分钟，h-小时，d-天，1c-当天（1c-当天的情况下，无论交易何时创建，都在0点关闭）。 该参数数值不接受小数点， 如 1.5h，可转换为 90m。 默认值为15d。  注：time_expire和timeout_express两者只需传入一个或者都不传，如果两者都传，优先使用time_expire。")

  public String getTimeoutExpress() {
    return timeoutExpress;
  }


  public void setTimeoutExpress(String timeoutExpress) {
    this.timeoutExpress = timeoutExpress;
  }


  public AlipayTradePagePayModel totalAmount(String totalAmount) {
    
    this.totalAmount = totalAmount;
    return this;
  }

   /**
   * 订单总金额。 单位为元，精确到小数点后两位，取值范围：[0.01,100000000] 。
   * @return totalAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "88.88", value = "订单总金额。 单位为元，精确到小数点后两位，取值范围：[0.01,100000000] 。")

  public String getTotalAmount() {
    return totalAmount;
  }


  public void setTotalAmount(String totalAmount) {
    this.totalAmount = totalAmount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlipayTradePagePayModel alipayTradePagePayModel = (AlipayTradePagePayModel) o;
    return Objects.equals(this.agreementSignParams, alipayTradePagePayModel.agreementSignParams) &&
        Objects.equals(this.body, alipayTradePagePayModel.body) &&
        Objects.equals(this.businessParams, alipayTradePagePayModel.businessParams) &&
        Objects.equals(this.disablePayChannels, alipayTradePagePayModel.disablePayChannels) &&
        Objects.equals(this.enablePayChannels, alipayTradePagePayModel.enablePayChannels) &&
        Objects.equals(this.extUserInfo, alipayTradePagePayModel.extUserInfo) &&
        Objects.equals(this.extendParams, alipayTradePagePayModel.extendParams) &&
        Objects.equals(this.goodsDetail, alipayTradePagePayModel.goodsDetail) &&
        Objects.equals(this.goodsType, alipayTradePagePayModel.goodsType) &&
        Objects.equals(this.integrationType, alipayTradePagePayModel.integrationType) &&
        Objects.equals(this.invoiceInfo, alipayTradePagePayModel.invoiceInfo) &&
        Objects.equals(this.merchantOrderNo, alipayTradePagePayModel.merchantOrderNo) &&
        Objects.equals(this.notifyUrl, alipayTradePagePayModel.notifyUrl) &&
        Objects.equals(this.outTradeNo, alipayTradePagePayModel.outTradeNo) &&
        Objects.equals(this.passbackParams, alipayTradePagePayModel.passbackParams) &&
        Objects.equals(this.productCode, alipayTradePagePayModel.productCode) &&
        Objects.equals(this.promoParams, alipayTradePagePayModel.promoParams) &&
        Objects.equals(this.qrPayMode, alipayTradePagePayModel.qrPayMode) &&
        Objects.equals(this.qrcodeWidth, alipayTradePagePayModel.qrcodeWidth) &&
        Objects.equals(this.queryOptions, alipayTradePagePayModel.queryOptions) &&
        Objects.equals(this.requestFromUrl, alipayTradePagePayModel.requestFromUrl) &&
        Objects.equals(this.returnUrl, alipayTradePagePayModel.returnUrl) &&
        Objects.equals(this.royaltyInfo, alipayTradePagePayModel.royaltyInfo) &&
        Objects.equals(this.settleInfo, alipayTradePagePayModel.settleInfo) &&
        Objects.equals(this.storeId, alipayTradePagePayModel.storeId) &&
        Objects.equals(this.subMerchant, alipayTradePagePayModel.subMerchant) &&
        Objects.equals(this.subject, alipayTradePagePayModel.subject) &&
        Objects.equals(this.timeExpire, alipayTradePagePayModel.timeExpire) &&
        Objects.equals(this.timeoutExpress, alipayTradePagePayModel.timeoutExpress) &&
        Objects.equals(this.totalAmount, alipayTradePagePayModel.totalAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agreementSignParams, body, businessParams, disablePayChannels, enablePayChannels, extUserInfo, extendParams, goodsDetail, goodsType, integrationType, invoiceInfo, merchantOrderNo, notifyUrl, outTradeNo, passbackParams, productCode, promoParams, qrPayMode, qrcodeWidth, queryOptions, requestFromUrl, returnUrl, royaltyInfo, settleInfo, storeId, subMerchant, subject, timeExpire, timeoutExpress, totalAmount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlipayTradePagePayModel {\n");
    sb.append("    agreementSignParams: ").append(toIndentedString(agreementSignParams)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    businessParams: ").append(toIndentedString(businessParams)).append("\n");
    sb.append("    disablePayChannels: ").append(toIndentedString(disablePayChannels)).append("\n");
    sb.append("    enablePayChannels: ").append(toIndentedString(enablePayChannels)).append("\n");
    sb.append("    extUserInfo: ").append(toIndentedString(extUserInfo)).append("\n");
    sb.append("    extendParams: ").append(toIndentedString(extendParams)).append("\n");
    sb.append("    goodsDetail: ").append(toIndentedString(goodsDetail)).append("\n");
    sb.append("    goodsType: ").append(toIndentedString(goodsType)).append("\n");
    sb.append("    integrationType: ").append(toIndentedString(integrationType)).append("\n");
    sb.append("    invoiceInfo: ").append(toIndentedString(invoiceInfo)).append("\n");
    sb.append("    merchantOrderNo: ").append(toIndentedString(merchantOrderNo)).append("\n");
    sb.append("    notifyUrl: ").append(toIndentedString(notifyUrl)).append("\n");
    sb.append("    outTradeNo: ").append(toIndentedString(outTradeNo)).append("\n");
    sb.append("    passbackParams: ").append(toIndentedString(passbackParams)).append("\n");
    sb.append("    productCode: ").append(toIndentedString(productCode)).append("\n");
    sb.append("    promoParams: ").append(toIndentedString(promoParams)).append("\n");
    sb.append("    qrPayMode: ").append(toIndentedString(qrPayMode)).append("\n");
    sb.append("    qrcodeWidth: ").append(toIndentedString(qrcodeWidth)).append("\n");
    sb.append("    queryOptions: ").append(toIndentedString(queryOptions)).append("\n");
    sb.append("    requestFromUrl: ").append(toIndentedString(requestFromUrl)).append("\n");
    sb.append("    returnUrl: ").append(toIndentedString(returnUrl)).append("\n");
    sb.append("    royaltyInfo: ").append(toIndentedString(royaltyInfo)).append("\n");
    sb.append("    settleInfo: ").append(toIndentedString(settleInfo)).append("\n");
    sb.append("    storeId: ").append(toIndentedString(storeId)).append("\n");
    sb.append("    subMerchant: ").append(toIndentedString(subMerchant)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    timeExpire: ").append(toIndentedString(timeExpire)).append("\n");
    sb.append("    timeoutExpress: ").append(toIndentedString(timeoutExpress)).append("\n");
    sb.append("    totalAmount: ").append(toIndentedString(totalAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("agreement_sign_params");
    openapiFields.add("body");
    openapiFields.add("business_params");
    openapiFields.add("disable_pay_channels");
    openapiFields.add("enable_pay_channels");
    openapiFields.add("ext_user_info");
    openapiFields.add("extend_params");
    openapiFields.add("goods_detail");
    openapiFields.add("goods_type");
    openapiFields.add("integration_type");
    openapiFields.add("invoice_info");
    openapiFields.add("merchant_order_no");
    openapiFields.add("notify_url");
    openapiFields.add("out_trade_no");
    openapiFields.add("passback_params");
    openapiFields.add("product_code");
    openapiFields.add("promo_params");
    openapiFields.add("qr_pay_mode");
    openapiFields.add("qrcode_width");
    openapiFields.add("query_options");
    openapiFields.add("request_from_url");
    openapiFields.add("return_url");
    openapiFields.add("royalty_info");
    openapiFields.add("settle_info");
    openapiFields.add("store_id");
    openapiFields.add("sub_merchant");
    openapiFields.add("subject");
    openapiFields.add("time_expire");
    openapiFields.add("timeout_express");
    openapiFields.add("total_amount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AlipayTradePagePayModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (AlipayTradePagePayModel.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in AlipayTradePagePayModel is not found in the empty JSON string", AlipayTradePagePayModel.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!AlipayTradePagePayModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AlipayTradePagePayModel` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `agreement_sign_params`
      if (jsonObj.getAsJsonObject("agreement_sign_params") != null) {
        AgreementSignParams.validateJsonObject(jsonObj.getAsJsonObject("agreement_sign_params"));
      }
      if (jsonObj.get("body") != null && !jsonObj.get("body").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `body` to be a primitive type in the JSON string but got `%s`", jsonObj.get("body").toString()));
      }
      if (jsonObj.get("business_params") != null && !jsonObj.get("business_params").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `business_params` to be a primitive type in the JSON string but got `%s`", jsonObj.get("business_params").toString()));
      }
      if (jsonObj.get("disable_pay_channels") != null && !jsonObj.get("disable_pay_channels").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `disable_pay_channels` to be a primitive type in the JSON string but got `%s`", jsonObj.get("disable_pay_channels").toString()));
      }
      if (jsonObj.get("enable_pay_channels") != null && !jsonObj.get("enable_pay_channels").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `enable_pay_channels` to be a primitive type in the JSON string but got `%s`", jsonObj.get("enable_pay_channels").toString()));
      }
      // validate the optional field `ext_user_info`
      if (jsonObj.getAsJsonObject("ext_user_info") != null) {
        ExtUserInfo.validateJsonObject(jsonObj.getAsJsonObject("ext_user_info"));
      }
      // validate the optional field `extend_params`
      if (jsonObj.getAsJsonObject("extend_params") != null) {
        ExtendParams.validateJsonObject(jsonObj.getAsJsonObject("extend_params"));
      }
      JsonArray jsonArraygoodsDetail = jsonObj.getAsJsonArray("goods_detail");
      if (jsonArraygoodsDetail != null) {
        // ensure the json data is an array
        if (!jsonObj.get("goods_detail").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `goods_detail` to be an array in the JSON string but got `%s`", jsonObj.get("goods_detail").toString()));
        }

        // validate the optional field `goods_detail` (array)
        for (int i = 0; i < jsonArraygoodsDetail.size(); i++) {
          GoodsDetail.validateJsonObject(jsonArraygoodsDetail.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("goods_type") != null && !jsonObj.get("goods_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `goods_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("goods_type").toString()));
      }
      if (jsonObj.get("integration_type") != null && !jsonObj.get("integration_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `integration_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("integration_type").toString()));
      }
      // validate the optional field `invoice_info`
      if (jsonObj.getAsJsonObject("invoice_info") != null) {
        InvoiceInfo.validateJsonObject(jsonObj.getAsJsonObject("invoice_info"));
      }
      if (jsonObj.get("merchant_order_no") != null && !jsonObj.get("merchant_order_no").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchant_order_no` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchant_order_no").toString()));
      }
      if (jsonObj.get("notify_url") != null && !jsonObj.get("notify_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notify_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notify_url").toString()));
      }
      if (jsonObj.get("out_trade_no") != null && !jsonObj.get("out_trade_no").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `out_trade_no` to be a primitive type in the JSON string but got `%s`", jsonObj.get("out_trade_no").toString()));
      }
      if (jsonObj.get("passback_params") != null && !jsonObj.get("passback_params").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `passback_params` to be a primitive type in the JSON string but got `%s`", jsonObj.get("passback_params").toString()));
      }
      if (jsonObj.get("product_code") != null && !jsonObj.get("product_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `product_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("product_code").toString()));
      }
      if (jsonObj.get("promo_params") != null && !jsonObj.get("promo_params").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `promo_params` to be a primitive type in the JSON string but got `%s`", jsonObj.get("promo_params").toString()));
      }
      if (jsonObj.get("qr_pay_mode") != null && !jsonObj.get("qr_pay_mode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `qr_pay_mode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("qr_pay_mode").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("query_options") != null && !jsonObj.get("query_options").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `query_options` to be an array in the JSON string but got `%s`", jsonObj.get("query_options").toString()));
      }
      if (jsonObj.get("request_from_url") != null && !jsonObj.get("request_from_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `request_from_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("request_from_url").toString()));
      }
      if (jsonObj.get("return_url") != null && !jsonObj.get("return_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `return_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("return_url").toString()));
      }
      // validate the optional field `royalty_info`
      if (jsonObj.getAsJsonObject("royalty_info") != null) {
        RoyaltyInfo.validateJsonObject(jsonObj.getAsJsonObject("royalty_info"));
      }
      // validate the optional field `settle_info`
      if (jsonObj.getAsJsonObject("settle_info") != null) {
        SettleInfo.validateJsonObject(jsonObj.getAsJsonObject("settle_info"));
      }
      if (jsonObj.get("store_id") != null && !jsonObj.get("store_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `store_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("store_id").toString()));
      }
      // validate the optional field `sub_merchant`
      if (jsonObj.getAsJsonObject("sub_merchant") != null) {
        SubMerchant.validateJsonObject(jsonObj.getAsJsonObject("sub_merchant"));
      }
      if (jsonObj.get("subject") != null && !jsonObj.get("subject").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subject` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subject").toString()));
      }
      if (jsonObj.get("time_expire") != null && !jsonObj.get("time_expire").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `time_expire` to be a primitive type in the JSON string but got `%s`", jsonObj.get("time_expire").toString()));
      }
      if (jsonObj.get("timeout_express") != null && !jsonObj.get("timeout_express").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timeout_express` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timeout_express").toString()));
      }
      if (jsonObj.get("total_amount") != null && !jsonObj.get("total_amount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `total_amount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("total_amount").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AlipayTradePagePayModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AlipayTradePagePayModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AlipayTradePagePayModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AlipayTradePagePayModel.class));

       return (TypeAdapter<T>) new TypeAdapter<AlipayTradePagePayModel>() {
           @Override
           public void write(JsonWriter out, AlipayTradePagePayModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AlipayTradePagePayModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AlipayTradePagePayModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AlipayTradePagePayModel
  * @throws IOException if the JSON string is invalid with respect to AlipayTradePagePayModel
  */
  public static AlipayTradePagePayModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AlipayTradePagePayModel.class);
  }

 /**
  * Convert an instance of AlipayTradePagePayModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

