/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2022-12-23
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.alipay.v3.model.Participant;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.alipay.v3.JSON;

/**
 * AlipayFundTransAppPayModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AlipayFundTransAppPayModel {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_BIZ_SCENE = "biz_scene";
  @SerializedName(SERIALIZED_NAME_BIZ_SCENE)
  private String bizScene;

  public static final String SERIALIZED_NAME_BUSINESS_PARAMS = "business_params";
  @SerializedName(SERIALIZED_NAME_BUSINESS_PARAMS)
  private String businessParams;

  public static final String SERIALIZED_NAME_ORDER_ID = "order_id";
  @SerializedName(SERIALIZED_NAME_ORDER_ID)
  private String orderId;

  public static final String SERIALIZED_NAME_ORDER_TITLE = "order_title";
  @SerializedName(SERIALIZED_NAME_ORDER_TITLE)
  private String orderTitle;

  public static final String SERIALIZED_NAME_OUT_BIZ_NO = "out_biz_no";
  @SerializedName(SERIALIZED_NAME_OUT_BIZ_NO)
  private String outBizNo;

  public static final String SERIALIZED_NAME_PASSBACK_PARAMS = "passback_params";
  @SerializedName(SERIALIZED_NAME_PASSBACK_PARAMS)
  private String passbackParams;

  public static final String SERIALIZED_NAME_PAYEE_INFO = "payee_info";
  @SerializedName(SERIALIZED_NAME_PAYEE_INFO)
  private Participant payeeInfo;

  public static final String SERIALIZED_NAME_PAYER_INFO = "payer_info";
  @SerializedName(SERIALIZED_NAME_PAYER_INFO)
  private Participant payerInfo;

  public static final String SERIALIZED_NAME_PRODUCT_CODE = "product_code";
  @SerializedName(SERIALIZED_NAME_PRODUCT_CODE)
  private String productCode;

  public static final String SERIALIZED_NAME_REFUND_TIME_EXPIRE = "refund_time_expire";
  @SerializedName(SERIALIZED_NAME_REFUND_TIME_EXPIRE)
  private String refundTimeExpire;

  public static final String SERIALIZED_NAME_REMARK = "remark";
  @SerializedName(SERIALIZED_NAME_REMARK)
  private String remark;

  public static final String SERIALIZED_NAME_REQUEST_TIME = "request_time";
  @SerializedName(SERIALIZED_NAME_REQUEST_TIME)
  private String requestTime;

  public static final String SERIALIZED_NAME_RETURN_URL = "return_url";
  @SerializedName(SERIALIZED_NAME_RETURN_URL)
  private String returnUrl;

  public static final String SERIALIZED_NAME_TIME_EXPIRE = "time_expire";
  @SerializedName(SERIALIZED_NAME_TIME_EXPIRE)
  private String timeExpire;

  public static final String SERIALIZED_NAME_TRANS_AMOUNT = "trans_amount";
  @SerializedName(SERIALIZED_NAME_TRANS_AMOUNT)
  private String transAmount;

  public AlipayFundTransAppPayModel() { 
  }

  public AlipayFundTransAppPayModel bizScene(String bizScene) {
    
    this.bizScene = bizScene;
    return this;
  }

   /**
   * 描述特定的业务场景，可传值如下：  PERSONAL_PAY: 发红包
   * @return bizScene
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "PERSONAL_PAY", value = "描述特定的业务场景，可传值如下：  PERSONAL_PAY: 发红包")

  public String getBizScene() {
    return bizScene;
  }


  public void setBizScene(String bizScene) {
    this.bizScene = bizScene;
  }


  public AlipayFundTransAppPayModel businessParams(String businessParams) {
    
    this.businessParams = businessParams;
    return this;
  }

   /**
   * JSON格式，传递业务扩展参数. 业务扩展字段，JSON格式。支持如下属性： sub_biz_scene 子场景，必填，传REDPACKET payer_binded_alipay_uid 创建红包的商户会员绑定的支付宝userId，必填
   * @return businessParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"sub_biz_scene\":\"REDPACKET\",\"payer_binded_alipay_uid\":\"2088302510459335\"}", value = "JSON格式，传递业务扩展参数. 业务扩展字段，JSON格式。支持如下属性： sub_biz_scene 子场景，必填，传REDPACKET payer_binded_alipay_uid 创建红包的商户会员绑定的支付宝userId，必填")

  public String getBusinessParams() {
    return businessParams;
  }


  public void setBusinessParams(String businessParams) {
    this.businessParams = businessParams;
  }


  public AlipayFundTransAppPayModel orderId(String orderId) {
    
    this.orderId = orderId;
    return this;
  }

   /**
   * 支付宝订单号
   * @return orderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "20191001110076000006120015113294", value = "支付宝订单号")

  public String getOrderId() {
    return orderId;
  }


  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }


  public AlipayFundTransAppPayModel orderTitle(String orderTitle) {
    
    this.orderTitle = orderTitle;
    return this;
  }

   /**
   * 支付订单的标题，用于在收银台和消费记录展示
   * @return orderTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "钉钉拼手气红包", value = "支付订单的标题，用于在收银台和消费记录展示")

  public String getOrderTitle() {
    return orderTitle;
  }


  public void setOrderTitle(String orderTitle) {
    this.orderTitle = orderTitle;
  }


  public AlipayFundTransAppPayModel outBizNo(String outBizNo) {
    
    this.outBizNo = outBizNo;
    return this;
  }

   /**
   * 商户端的唯一订单号，对于同一笔转账请求，商户需保证该订单号唯一。
   * @return outBizNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018062800001", value = "商户端的唯一订单号，对于同一笔转账请求，商户需保证该订单号唯一。")

  public String getOutBizNo() {
    return outBizNo;
  }


  public void setOutBizNo(String outBizNo) {
    this.outBizNo = outBizNo;
  }


  public AlipayFundTransAppPayModel passbackParams(String passbackParams) {
    
    this.passbackParams = passbackParams;
    return this;
  }

   /**
   * 公用回传参数，如果请求时传递了该参数，则异步通知商户时会回传该参数。
   * @return passbackParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"merchantBizType\":\"peerPay\"}", value = "公用回传参数，如果请求时传递了该参数，则异步通知商户时会回传该参数。")

  public String getPassbackParams() {
    return passbackParams;
  }


  public void setPassbackParams(String passbackParams) {
    this.passbackParams = passbackParams;
  }


  public AlipayFundTransAppPayModel payeeInfo(Participant payeeInfo) {
    
    this.payeeInfo = payeeInfo;
    return this;
  }

   /**
   * Get payeeInfo
   * @return payeeInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Participant getPayeeInfo() {
    return payeeInfo;
  }


  public void setPayeeInfo(Participant payeeInfo) {
    this.payeeInfo = payeeInfo;
  }


  public AlipayFundTransAppPayModel payerInfo(Participant payerInfo) {
    
    this.payerInfo = payerInfo;
    return this;
  }

   /**
   * Get payerInfo
   * @return payerInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Participant getPayerInfo() {
    return payerInfo;
  }


  public void setPayerInfo(Participant payerInfo) {
    this.payerInfo = payerInfo;
  }


  public AlipayFundTransAppPayModel productCode(String productCode) {
    
    this.productCode = productCode;
    return this;
  }

   /**
   * 销售产品码，商家和支付宝签约的产品码。  STD_RED_PACKET：现金红包
   * @return productCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "STD_RED_PACKET", value = "销售产品码，商家和支付宝签约的产品码。  STD_RED_PACKET：现金红包")

  public String getProductCode() {
    return productCode;
  }


  public void setProductCode(String productCode) {
    this.productCode = productCode;
  }


  public AlipayFundTransAppPayModel refundTimeExpire(String refundTimeExpire) {
    
    this.refundTimeExpire = refundTimeExpire;
    return this;
  }

   /**
   * 退款超时时间，格式yyyy-MM-dd HH:mm。到指定时间后，系统会自动触发退款，并原路退回到付款账户。如果指定了退款时间，必须早于销售方案里设置的最晚退款时间。
   * @return refundTimeExpire
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018-11-08 10:00", value = "退款超时时间，格式yyyy-MM-dd HH:mm。到指定时间后，系统会自动触发退款，并原路退回到付款账户。如果指定了退款时间，必须早于销售方案里设置的最晚退款时间。")

  public String getRefundTimeExpire() {
    return refundTimeExpire;
  }


  public void setRefundTimeExpire(String refundTimeExpire) {
    this.refundTimeExpire = refundTimeExpire;
  }


  public AlipayFundTransAppPayModel remark(String remark) {
    
    this.remark = remark;
    return this;
  }

   /**
   * 支付备注
   * @return remark
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "拼手气红包", value = "支付备注")

  public String getRemark() {
    return remark;
  }


  public void setRemark(String remark) {
    this.remark = remark;
  }


  public AlipayFundTransAppPayModel requestTime(String requestTime) {
    
    this.requestTime = requestTime;
    return this;
  }

   /**
   * 商户发起请求的系统时间，格式yyyy-MM-dd HH:mm。基于安全的考虑，支付宝会对请求时间间隔进行控制，超过一定时间会拒绝支付请求。
   * @return requestTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2019-06-23 19:15", value = "商户发起请求的系统时间，格式yyyy-MM-dd HH:mm。基于安全的考虑，支付宝会对请求时间间隔进行控制，超过一定时间会拒绝支付请求。")

  public String getRequestTime() {
    return requestTime;
  }


  public void setRequestTime(String requestTime) {
    this.requestTime = requestTime;
  }


  public AlipayFundTransAppPayModel returnUrl(String returnUrl) {
    
    this.returnUrl = returnUrl;
    return this;
  }

   /**
   * 跳转地址
   * @return returnUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "跳转地址")

  public String getReturnUrl() {
    return returnUrl;
  }


  public void setReturnUrl(String returnUrl) {
    this.returnUrl = returnUrl;
  }


  public AlipayFundTransAppPayModel timeExpire(String timeExpire) {
    
    this.timeExpire = timeExpire;
    return this;
  }

   /**
   * 绝对超时时间，格式为yyyy-MM-dd HH:mm
   * @return timeExpire
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018-03-23 19:15", value = "绝对超时时间，格式为yyyy-MM-dd HH:mm")

  public String getTimeExpire() {
    return timeExpire;
  }


  public void setTimeExpire(String timeExpire) {
    this.timeExpire = timeExpire;
  }


  public AlipayFundTransAppPayModel transAmount(String transAmount) {
    
    this.transAmount = transAmount;
    return this;
  }

   /**
   * 订单总金额，单位为元，精确到小数点后两位，取值范围[0.01,9999999999999.99]
   * @return transAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "8.88", value = "订单总金额，单位为元，精确到小数点后两位，取值范围[0.01,9999999999999.99]")

  public String getTransAmount() {
    return transAmount;
  }


  public void setTransAmount(String transAmount) {
    this.transAmount = transAmount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlipayFundTransAppPayModel alipayFundTransAppPayModel = (AlipayFundTransAppPayModel) o;
    return Objects.equals(this.bizScene, alipayFundTransAppPayModel.bizScene) &&
        Objects.equals(this.businessParams, alipayFundTransAppPayModel.businessParams) &&
        Objects.equals(this.orderId, alipayFundTransAppPayModel.orderId) &&
        Objects.equals(this.orderTitle, alipayFundTransAppPayModel.orderTitle) &&
        Objects.equals(this.outBizNo, alipayFundTransAppPayModel.outBizNo) &&
        Objects.equals(this.passbackParams, alipayFundTransAppPayModel.passbackParams) &&
        Objects.equals(this.payeeInfo, alipayFundTransAppPayModel.payeeInfo) &&
        Objects.equals(this.payerInfo, alipayFundTransAppPayModel.payerInfo) &&
        Objects.equals(this.productCode, alipayFundTransAppPayModel.productCode) &&
        Objects.equals(this.refundTimeExpire, alipayFundTransAppPayModel.refundTimeExpire) &&
        Objects.equals(this.remark, alipayFundTransAppPayModel.remark) &&
        Objects.equals(this.requestTime, alipayFundTransAppPayModel.requestTime) &&
        Objects.equals(this.returnUrl, alipayFundTransAppPayModel.returnUrl) &&
        Objects.equals(this.timeExpire, alipayFundTransAppPayModel.timeExpire) &&
        Objects.equals(this.transAmount, alipayFundTransAppPayModel.transAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bizScene, businessParams, orderId, orderTitle, outBizNo, passbackParams, payeeInfo, payerInfo, productCode, refundTimeExpire, remark, requestTime, returnUrl, timeExpire, transAmount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlipayFundTransAppPayModel {\n");
    sb.append("    bizScene: ").append(toIndentedString(bizScene)).append("\n");
    sb.append("    businessParams: ").append(toIndentedString(businessParams)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    orderTitle: ").append(toIndentedString(orderTitle)).append("\n");
    sb.append("    outBizNo: ").append(toIndentedString(outBizNo)).append("\n");
    sb.append("    passbackParams: ").append(toIndentedString(passbackParams)).append("\n");
    sb.append("    payeeInfo: ").append(toIndentedString(payeeInfo)).append("\n");
    sb.append("    payerInfo: ").append(toIndentedString(payerInfo)).append("\n");
    sb.append("    productCode: ").append(toIndentedString(productCode)).append("\n");
    sb.append("    refundTimeExpire: ").append(toIndentedString(refundTimeExpire)).append("\n");
    sb.append("    remark: ").append(toIndentedString(remark)).append("\n");
    sb.append("    requestTime: ").append(toIndentedString(requestTime)).append("\n");
    sb.append("    returnUrl: ").append(toIndentedString(returnUrl)).append("\n");
    sb.append("    timeExpire: ").append(toIndentedString(timeExpire)).append("\n");
    sb.append("    transAmount: ").append(toIndentedString(transAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("biz_scene");
    openapiFields.add("business_params");
    openapiFields.add("order_id");
    openapiFields.add("order_title");
    openapiFields.add("out_biz_no");
    openapiFields.add("passback_params");
    openapiFields.add("payee_info");
    openapiFields.add("payer_info");
    openapiFields.add("product_code");
    openapiFields.add("refund_time_expire");
    openapiFields.add("remark");
    openapiFields.add("request_time");
    openapiFields.add("return_url");
    openapiFields.add("time_expire");
    openapiFields.add("trans_amount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AlipayFundTransAppPayModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (AlipayFundTransAppPayModel.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in AlipayFundTransAppPayModel is not found in the empty JSON string", AlipayFundTransAppPayModel.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!AlipayFundTransAppPayModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AlipayFundTransAppPayModel` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("biz_scene") != null && !jsonObj.get("biz_scene").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `biz_scene` to be a primitive type in the JSON string but got `%s`", jsonObj.get("biz_scene").toString()));
      }
      if (jsonObj.get("business_params") != null && !jsonObj.get("business_params").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `business_params` to be a primitive type in the JSON string but got `%s`", jsonObj.get("business_params").toString()));
      }
      if (jsonObj.get("order_id") != null && !jsonObj.get("order_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_id").toString()));
      }
      if (jsonObj.get("order_title") != null && !jsonObj.get("order_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_title").toString()));
      }
      if (jsonObj.get("out_biz_no") != null && !jsonObj.get("out_biz_no").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `out_biz_no` to be a primitive type in the JSON string but got `%s`", jsonObj.get("out_biz_no").toString()));
      }
      if (jsonObj.get("passback_params") != null && !jsonObj.get("passback_params").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `passback_params` to be a primitive type in the JSON string but got `%s`", jsonObj.get("passback_params").toString()));
      }
      // validate the optional field `payee_info`
      if (jsonObj.getAsJsonObject("payee_info") != null) {
        Participant.validateJsonObject(jsonObj.getAsJsonObject("payee_info"));
      }
      // validate the optional field `payer_info`
      if (jsonObj.getAsJsonObject("payer_info") != null) {
        Participant.validateJsonObject(jsonObj.getAsJsonObject("payer_info"));
      }
      if (jsonObj.get("product_code") != null && !jsonObj.get("product_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `product_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("product_code").toString()));
      }
      if (jsonObj.get("refund_time_expire") != null && !jsonObj.get("refund_time_expire").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `refund_time_expire` to be a primitive type in the JSON string but got `%s`", jsonObj.get("refund_time_expire").toString()));
      }
      if (jsonObj.get("remark") != null && !jsonObj.get("remark").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `remark` to be a primitive type in the JSON string but got `%s`", jsonObj.get("remark").toString()));
      }
      if (jsonObj.get("request_time") != null && !jsonObj.get("request_time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `request_time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("request_time").toString()));
      }
      if (jsonObj.get("return_url") != null && !jsonObj.get("return_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `return_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("return_url").toString()));
      }
      if (jsonObj.get("time_expire") != null && !jsonObj.get("time_expire").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `time_expire` to be a primitive type in the JSON string but got `%s`", jsonObj.get("time_expire").toString()));
      }
      if (jsonObj.get("trans_amount") != null && !jsonObj.get("trans_amount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trans_amount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trans_amount").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AlipayFundTransAppPayModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AlipayFundTransAppPayModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AlipayFundTransAppPayModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AlipayFundTransAppPayModel.class));

       return (TypeAdapter<T>) new TypeAdapter<AlipayFundTransAppPayModel>() {
           @Override
           public void write(JsonWriter out, AlipayFundTransAppPayModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AlipayFundTransAppPayModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AlipayFundTransAppPayModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AlipayFundTransAppPayModel
  * @throws IOException if the JSON string is invalid with respect to AlipayFundTransAppPayModel
  */
  public static AlipayFundTransAppPayModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AlipayFundTransAppPayModel.class);
  }

 /**
  * Convert an instance of AlipayFundTransAppPayModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

